// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiAutosCDK;

#nullable disable

namespace WebApiAutosCDK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220819134600_Ext_Ver")]
    partial class Ext_Ver
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApiAutosCDK.Entidades.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaCDKId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaCDKId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.ExtraCDK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ExtraCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.MarcaCDK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("MarcasCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.ModeloCDK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MarcaCDKId")
                        .HasColumnType("int");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaCDKId");

                    b.ToTable("ModelosCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.VersionCDK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ModeloCDKId")
                        .HasColumnType("int");

                    b.Property<string>("combustible")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("potencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("precioBase")
                        .HasColumnType("real");

                    b.Property<string>("versionNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("VersionCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.VersionCDK_ExtraCDK", b =>
                {
                    b.Property<int>("VersionCDKId")
                        .HasColumnType("int");

                    b.Property<int>("ExtrasCDKId")
                        .HasColumnType("int");

                    b.Property<int?>("extraCDKId")
                        .HasColumnType("int");

                    b.HasKey("VersionCDKId", "ExtrasCDKId");

                    b.HasIndex("extraCDKId");

                    b.ToTable("versionCDK_ExtraCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.Comentario", b =>
                {
                    b.HasOne("WebApiAutosCDK.Entidades.MarcaCDK", "marcaCDK")
                        .WithMany("comentarios")
                        .HasForeignKey("MarcaCDKId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marcaCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.ModeloCDK", b =>
                {
                    b.HasOne("WebApiAutosCDK.Entidades.MarcaCDK", "MarcaCDK")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaCDKId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarcaCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.VersionCDK_ExtraCDK", b =>
                {
                    b.HasOne("WebApiAutosCDK.Entidades.VersionCDK", "versionCDK")
                        .WithMany("versionCDK_ExtraCDK")
                        .HasForeignKey("VersionCDKId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiAutosCDK.Entidades.ExtraCDK", "extraCDK")
                        .WithMany("versionCDK_ExtraCDK")
                        .HasForeignKey("extraCDKId");

                    b.Navigation("extraCDK");

                    b.Navigation("versionCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.ExtraCDK", b =>
                {
                    b.Navigation("versionCDK_ExtraCDK");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.MarcaCDK", b =>
                {
                    b.Navigation("Modelos");

                    b.Navigation("comentarios");
                });

            modelBuilder.Entity("WebApiAutosCDK.Entidades.VersionCDK", b =>
                {
                    b.Navigation("versionCDK_ExtraCDK");
                });
#pragma warning restore 612, 618
        }
    }
}
